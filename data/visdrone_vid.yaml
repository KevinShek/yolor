# YOLOv5 üöÄ by Ultralytics, GPL-3.0 license
# VisDrone2019-DET dataset https://github.com/VisDrone/VisDrone-Dataset
# Example usage: python train.py --data VisDrone.yaml
# parent
# ‚îú‚îÄ‚îÄ yolov5
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ VisDrone  ‚Üê downloads here


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: ../datasets/visdrone
train: ../datasets/visdrone/VisDrone2019-VID-train/images  # train images (relative to 'path')  6471 images
val: ../datasets/visdrone/VisDrone2019-VID-val/images  # val images (relative to 'path')  548 images
test: ../datasets/visdrone/VisDrone2019-VID-test-dev/images  # test images (optional)  1610 images

# Classes
nc: 10  # number of classes
names: ['pedestrian', 'people', 'bicycle', 'car', 'van', 'truck', 'tricycle', 'awning-tricycle', 'bus', 'motor']


# Download script/URL (optional) ---------------------------------------------------------------------------------------
download: |
  from utils.general import download, os, Path

  def visdrone2yolo(dir):
      from PIL import Image
      from tqdm import tqdm
      import os

      def convert_box(size, box):
          # Convert VisDrone box to YOLO xywh box
          dw = 1. / size[0]
          dh = 1. / size[1]
          return (box[0] + box[2] / 2) * dw, (box[1] + box[3] / 2) * dh, box[2] * dw, box[3] * dh

      (dir / 'labels').mkdir(parents=True, exist_ok=True)  # make labels directory
      list_of_folder = os.listdir(f'{dir} / annotations')
      for sequences in list_of_folder:
        pbar = tqdm((dir / 'annotations' / sequences).glob('*.txt'), desc=f'Converting {dir}')
        for f in pbar:
            img_size = Image.open((dir / 'images' / f.name).with_suffix('.jpg')).size
            lines = []
            with open(f, 'r') as file:  # read annotation.txt
                for row in [x.split(',') for x in file.read().strip().splitlines()]:
                    if row[6] == '0':  # VisDrone 'ignored regions' class 0
                        continue
                    cls = int(row[7]) - 1
                    box = convert_box(img_size, tuple(map(int, row[1:6])))
                    lines.append(f"{cls} {' '.join(f'{x:.6f}' for x in box)}\n")
                    with open(str(f).replace(os.sep + 'annotations' + os.sep, os.sep + 'labels' + os.sep), 'w') as fl:
                        fl.writelines(lines)  # write label.txt


  dir = Path(yaml['path'])

  # Convert
  for d in 'VisDrone2019-VID-train', 'VisDrone2019-VID-val', 'VisDrone2019-VID-test-dev':
      visdrone2yolo(dir / d)  # convert VisDrone annotations to YOLO labels
